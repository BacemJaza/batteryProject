{"ast":null,"code":"import * as React from 'react';\nimport { SeriesContext } from '../context/SeriesContextProvider';\n\n/**\r\n * Get access to the internal state of series.\r\n * Structured by type of series:\r\n * { seriesType?: { series: { id1: precessedValue, ... }, seriesOrder: [id1, ...] } }\r\n * @returns FormattedSeries series\r\n */\nexport function useSeries() {\n  const {\n    isInitialized,\n    data\n  } = React.useContext(SeriesContext);\n  if (!isInitialized) {\n    throw new Error(['MUI X: Could not find the series ref context.', 'It looks like you rendered your component outside of a ChartsContainer parent component.'].join('\\n'));\n  }\n  return data;\n}\n\n/**\r\n * Get access to the internal state of pie series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedPieSeriesType>; seriesOrder: SeriesId[]; } | undefined pieSeries\r\n */\nexport function usePieSeries() {\n  const series = useSeries();\n  return React.useMemo(() => series.pie, [series.pie]);\n}\n\n/**\r\n * Get access to the internal state of line series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedLineSeriesType>; seriesOrder: SeriesId[]; } | undefined lineSeries\r\n */\nexport function useLineSeries() {\n  const series = useSeries();\n  return React.useMemo(() => series.line, [series.line]);\n}\n\n/**\r\n * Get access to the internal state of bar series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedBarSeriesType>; seriesOrder: SeriesId[]; } | undefined barSeries\r\n */\nexport function useBarSeries() {\n  const series = useSeries();\n  return React.useMemo(() => series.bar, [series.bar]);\n}\n\n/**\r\n * Get access to the internal state of scatter series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedScatterSeriesType>; seriesOrder: SeriesId[]; } | undefined scatterSeries\r\n */\nexport function useScatterSeries() {\n  const series = useSeries();\n  return React.useMemo(() => series.scatter, [series.scatter]);\n}","map":{"version":3,"names":["React","SeriesContext","useSeries","isInitialized","data","useContext","Error","join","usePieSeries","series","useMemo","pie","useLineSeries","line","useBarSeries","bar","useScatterSeries","scatter"],"sources":["C:/Users/user/Documents/GitHub/batteryProject/battery-app/frontend/node_modules/@mui/x-charts/esm/hooks/useSeries.js"],"sourcesContent":["import * as React from 'react';\r\nimport { SeriesContext } from '../context/SeriesContextProvider';\r\n\r\n/**\r\n * Get access to the internal state of series.\r\n * Structured by type of series:\r\n * { seriesType?: { series: { id1: precessedValue, ... }, seriesOrder: [id1, ...] } }\r\n * @returns FormattedSeries series\r\n */\r\nexport function useSeries() {\r\n  const {\r\n    isInitialized,\r\n    data\r\n  } = React.useContext(SeriesContext);\r\n  if (!isInitialized) {\r\n    throw new Error(['MUI X: Could not find the series ref context.', 'It looks like you rendered your component outside of a ChartsContainer parent component.'].join('\\n'));\r\n  }\r\n  return data;\r\n}\r\n\r\n/**\r\n * Get access to the internal state of pie series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedPieSeriesType>; seriesOrder: SeriesId[]; } | undefined pieSeries\r\n */\r\nexport function usePieSeries() {\r\n  const series = useSeries();\r\n  return React.useMemo(() => series.pie, [series.pie]);\r\n}\r\n\r\n/**\r\n * Get access to the internal state of line series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedLineSeriesType>; seriesOrder: SeriesId[]; } | undefined lineSeries\r\n */\r\nexport function useLineSeries() {\r\n  const series = useSeries();\r\n  return React.useMemo(() => series.line, [series.line]);\r\n}\r\n\r\n/**\r\n * Get access to the internal state of bar series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedBarSeriesType>; seriesOrder: SeriesId[]; } | undefined barSeries\r\n */\r\nexport function useBarSeries() {\r\n  const series = useSeries();\r\n  return React.useMemo(() => series.bar, [series.bar]);\r\n}\r\n\r\n/**\r\n * Get access to the internal state of scatter series.\r\n * The returned object contains:\r\n * - series: a mapping from ids to series attributes.\r\n * - seriesOrder: the array of series ids.\r\n * @returns { series: Record<SeriesId, DefaultizedScatterSeriesType>; seriesOrder: SeriesId[]; } | undefined scatterSeries\r\n */\r\nexport function useScatterSeries() {\r\n  const series = useSeries();\r\n  return React.useMemo(() => series.scatter, [series.scatter]);\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,kCAAkC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAA,EAAG;EAC1B,MAAM;IACJC,aAAa;IACbC;EACF,CAAC,GAAGJ,KAAK,CAACK,UAAU,CAACJ,aAAa,CAAC;EACnC,IAAI,CAACE,aAAa,EAAE;IAClB,MAAM,IAAIG,KAAK,CAAC,CAAC,+CAA+C,EAAE,0FAA0F,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3K;EACA,OAAOH,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,YAAYA,CAAA,EAAG;EAC7B,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,OAAOF,KAAK,CAACU,OAAO,CAAC,MAAMD,MAAM,CAACE,GAAG,EAAE,CAACF,MAAM,CAACE,GAAG,CAAC,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC9B,MAAMH,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,OAAOF,KAAK,CAACU,OAAO,CAAC,MAAMD,MAAM,CAACI,IAAI,EAAE,CAACJ,MAAM,CAACI,IAAI,CAAC,CAAC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC7B,MAAML,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,OAAOF,KAAK,CAACU,OAAO,CAAC,MAAMD,MAAM,CAACM,GAAG,EAAE,CAACN,MAAM,CAACM,GAAG,CAAC,CAAC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,MAAMP,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,OAAOF,KAAK,CAACU,OAAO,CAAC,MAAMD,MAAM,CAACQ,OAAO,EAAE,CAACR,MAAM,CAACQ,OAAO,CAAC,CAAC;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}